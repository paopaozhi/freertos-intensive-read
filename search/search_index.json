{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"FreeRTOS\u7cbe\u8bfb","text":"<p>\u8be5\u9879\u76ee\u901a\u8fc7\u5f00\u53d1\u5b9e\u4f8b\u7684\u65b9\u5f0f\u5b66\u4e60FreeRTOS\uff0c\u5bf9\u4e8eFreeRTOS\u7406\u8bba\u901a\u8fc7\u767d\u8bdd\u548c\u56fe\u7247\u65b9\u5f0f\u8fdb\u884c\u8bb2\u89e3\uff0c\u5bf9\u4e8e\u5355\u7247\u673a\u5916\u8bbe\u901a\u8fc7\u5b9e\u4f8b\u7406\u89e3\uff0c\u6587\u5b57\u89e3\u8bf4\uff0c\u56fe\u7247\u89e3\u91ca\u7684\u65b9\u5f0f\u8fdb\u884c\u8bb2\u89e3\u3002</p>"},{"location":"#_1","title":"\u5f00\u53d1\u73af\u5883","text":"<p>\u8be5\u9879\u76ee\u4f7f\u7528CLion\u4f5c\u4e3a\u5f00\u53d1IDE\uff0cSTM32Cubx\u4f5c\u4e3a\u5de5\u7a0b\u751f\u6210\u5de5\u5177</p>"},{"location":"#_2","title":"\u9879\u76ee\u8d21\u732e","text":"<ol> <li>\u5411\u4ed3\u5e93\u63d0\u4ea4Pr</li> <li>\u8054\u7cfb\u6211: paopaozhi@hotmail.com</li> </ol>"},{"location":"base_gpio/","title":"GPIO\u901a\u7528\u8f93\u5165\u8f93\u51fa\u7aef\u53e3","text":"<p>\u6bcf\u4e2aGPIO\u5f15\u811a\u90fd\u53ef\u4ee5\u7531\u8f6f\u4ef6\u914d\u7f6e\u6210\u8f93\u51fa(\u63a8\u633d\u6216\u5f00\u6f0f)\u3001\u8f93\u5165(\u5e26\u6216\u4e0d\u5e26\u4e0a\u62c9\u6216\u4e0b\u62c9)\u6216\u590d\u7528\u7684\u5916\u8bbe\u529f\u80fd \u7aef\u53e3\u3002\u591a\u6570GPIO\u5f15\u811a\u90fd\u4e0e\u6570\u5b57\u6216\u6a21\u62df\u7684\u590d\u7528\u5916\u8bbe\u5171\u7528\u3002\u9664\u4e86\u5177\u6709\u6a21\u62df\u8f93\u5165\u529f\u80fd\u7684\u7aef\u53e3\uff0c\u6240\u6709\u7684GPIO \u5f15\u811a\u90fd\u6709\u5927\u7535\u6d41\u901a\u8fc7\u80fd\u529b\u3002</p> <p>\u5728\u9700\u8981\u7684\u60c5\u51b5\u4e0b\uff0cI/O\u5f15\u811a\u7684\u5916\u8bbe\u529f\u80fd\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7279\u5b9a\u7684\u64cd\u4f5c\u9501\u5b9a\uff0c\u4ee5\u907f\u514d\u610f\u5916\u7684\u5199\u5165I/O\u5bc4\u5b58\u5668\u3002 \u5728APB2\u4e0a\u7684I/O\u811a\u53ef\u8fbe18MHz\u7684\u7ffb\u8f6c\u901f\u5ea6\u3002</p> <p>\u4e0a\u8ff0\u662fSTM32\u5b98\u65b9\u5bf9\u4e8eGPIO\u7684\u6982\u8ff0\uff0c\u6709\u7279\u522b\u591a\u7684\u7e41\u6742\u7684\u6982\u5ff5\u548c\u751f\u8bcd\uff0c\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u901a\u8fc7\u5927\u767d\u8bdd\u7ed9\u5927\u5bb6\u7ffb\u8bd1\u4e00\u4e0b</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u8981\u6709\u4e00\u4e2a\u6982\u5ff5\u5bf9\u4e8e\u5355\u7247\u673a\u6765\u8bf4\uff0c\u4e5f\u5c31\u662f\u5185\u6838\u6765\u8bf4\u4ed6\u53ea\u6709\u8ba1\u7b97\u7684\u529f\u80fd\u5373\u8ba1\u7b97\u5982\uff1a1+1\uff0c\u4ed6\u662f\u6ca1\u6709\u529e\u6cd5\u53bb\u5b9e\u73b0\u6211\u4eec\u73b0\u5b9e\u770b\u5230\u7684\u70b9\u706f\u7684\u64cd\u4f5c\u7684\uff0c\u4f46\u662f\uff0c\u901a\u8fc7GPIO\u5c31\u6253\u901a\u4e86\u5185\u6838\u548c\u5916\u90e8\u7684\u8fde\u63a5\uff0c\u5185\u6838\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u5bc4\u5b58\u5668\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\uff1a\u62c9\u9ad8/\u62c9\u4f4e\u7aef\u53e3\u7535\u538b\uff0c\u8bfb\u53d6\u6765\u81ea\u7aef\u53e3\u7684\u7535\u538b( \u6a21\u62df/\u6570\u5b57)\uff0c\u8fd9\u6837\u5b50\u5c31\u6253\u901a\u4e86\u5355\u7247\u673a\u548c\u5916\u90e8\u73af\u5883\u7684\u8fde\u63a5\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0bSTM32GPIO\u7ed3\u6784\u6846\u56fe\u3002</p> <p></p>"},{"location":"base_gpio/#gpio_1","title":"GPIO\u8f93\u51fa","text":""},{"location":"base_gpio/#_1","title":"\u7b80\u4ecb","text":"<p>\u901a\u8fc7\u5c06GPIO\u914d\u7f6e\u6210\u8f93\u51fa\u6a21\u5f0f\uff0c\u5c31\u53ef\u4ee5\u662f\u5b9e\u73b0\u8f93\u51fa\u7535\u538b\uff0c\u8bfb\u53d6\u5f53\u524d\u8f93\u51fa\u7684\u7535\u538b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u662f\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u95ea\u70c1LED\u4e86\u3002</p>"},{"location":"base_gpio/#_2","title":"\u5b9e\u8df5\u64cd\u4f5c","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u770b\u770bGPIO\u8f93\u51fa\u5982\u4f55\u5b9e\u73b0\uff0c\u901a\u8fc7stm32CubeMX\u53ef\u4ee5\u5feb\u901f\u7684\u914d\u7f6eGPIO\u7684\u6a21\u5f0f\u3002</p> <p>\u67e5\u770bLED\u7684\u539f\u7406\u56fe\u786e\u5b9aGPIO\u7ed1\u5b9a\u5728\u90a3\u4e2a\u5f15\u811a\u4e0a\u3002</p> <p></p> <p>\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 LED0 \u4f5c\u4e3a\u793a\u4f8b\u7684LED\uff0c\u53ef\u4ee5\u770b\u5230 LED0 \u7ed1\u5b9a\u7684\u5f15\u811a\u662f PC0 \uff0c\u90a3\u4e48\u53ea\u8981\u5c06 PC0 \u914d\u7f6e\u6210GPIO\u8f93\u51fa\u6a21\u5f0f\u5c31\u53ef\u4ee5\u9a71\u52a8LED\u5b9e\u73b0 LED\u95ea\u70c1 \u3002</p> <p></p> <p></p>"},{"location":"base_gpio/#gpio_2","title":"GPIO\u914d\u7f6e\u7684\u53c2\u6570","text":"\u53c2\u6570 \u53c2\u6570 \u9009\u9879 \u9009\u9879 GPIO output level \u521d\u59cbGPIO\u7535\u5e73 Low/High \u4f4e\u7535\u5e73/\u9ad8\u7535\u5e73 GPIO Mode GPIO\u6a21\u5f0f Output Push Pull /Output Open Drain \u63a8\u633d\u8f93\u51fa /\u5f00\u6f0f\u8f93\u51fa Maximum output speed \u6700\u5927\u8f93\u51fa\u901f\u5ea6 Low/Medium/High \u4f4e\u901f/\u4e2d\u901f\u5ea6/\u9ad8\u901f User Label \u7528\u6237\u6807\u7b7e Optional \u9009\u9879 <ul> <li> <p>\u63a8\u633d\u8f93\u51fa/\u5f00\u6f0f\u8f93\u51fa</p> </li> <li> <p>\u63a8\u633d\u8f93\u51fa</p> </li> </ul> <p>\u7ed3\u6784:\u63a8\u633d\u8f93\u51fa\u7ed3\u6784\u5305\u62ec\u4e00\u4e2aPNP\u578b\u548c\u4e00\u4e2aNPN\u578b\u6676\u4f53\u7ba1\uff0c\u5b83\u4eec\u5de5\u4f5c\u5728\u4e92\u8865\u7684\u5de5\u4f5c\u72b6\u6001\u3002\u5f53\u4e00\u4e2a\u6676\u4f53\u7ba1\u5bfc\u901a\u65f6\uff0c\u53e6\u4e00\u4e2a\u622a\u81f3\u3002</p> <p></p> <p>\u5bf9\u4e8e\u63a8\u633d\u8f93\u51fa\u6765\u8bf4\uff0c\u5177\u6709\u5f88\u5f3a\u7684\u9a71\u52a8\u80fd\u529b\uff0c\u4f46\u662f\uff0c\u4e0d\u5177\u6709 \u7ebf\u4e0e \u529f\u80fd\u3002</p> <ol> <li>\u5f00\u6f0f\u8f93\u51fa</li> </ol> <p>\u7ed3\u6784:\u5f00\u6f0f\u8f93\u51fa\u7ed3\u6784\u5305\u62ec\u4e00\u4e2aN\u578b\u6676\u4f53\u7ba1\uff0c\u53ea\u80fd\u62c9\u4f4e\u8f93\u51fa\u4fe1\u53f7\uff0c\u800c\u4e0d\u80fd\u62c9\u9ad8\u3002\u4e3a\u4e86\u5b9e\u73b0\u5b8c\u6574\u7684\u8f93\u51fa\u7535\u8def\uff0c\u9700\u8981\u5916\u90e8\u4e0a\u62c9\u7535\u963b\u3002</p> <p></p> <p>\u5bf9\u4e8e\u5f00\u6f0f\u8f93\u51fa\u6765\u8bf4\uff0c\u7531\u5916\u90e8\u4e0a\u62c9\u7535\u963b\u51b3\u5b9a\u9a71\u52a8\u80fd\u529b\uff0c\u4f46\u662f\uff0c\u5177\u6709 \u7ebf\u4e0e \u529f\u80fd\uff0c\u53ef\u4ee5\u7528\u4f5c\u4fe1\u53f7\u901a\u4fe1\u3002</p> \\ \u63a8\u633d\u8f93\u51fa \u5f00\u6f0f\u8f93\u51fa \u9ad8\u7535\u5e73\u9a71\u52a8\u80fd\u529b \u5f3a \u7531\u5916\u90e8\u4e0a\u62c9\u7535\u963b\u63d0\u4f9b \u4f4e\u7535\u5e73\u9a71\u52a8\u80fd\u529b \u5f3a \u7531\u5916\u90e8\u4e0a\u62c9\u7535\u963b\u63d0\u4f9b \u7535\u5e73\u8df3\u53d8\u901f\u5ea6 \u5feb \u7531\u5916\u90e8\u4e0a\u62c9\u7535\u963b\u63d0\u4f9b \u7ebf\u4e0e\u529f\u80fd \u4e0d\u652f\u6301 \u652f\u6301 \u7535\u5e73\u8f6c\u6362 \u4e0d\u652f\u6301 \u652f\u6301"},{"location":"base_gpio/#led","title":"\u5b9e\u73b0LED\u95ea\u70c1","text":"<pre><code>int main(void)\n{\n    // \u7701\u7565\u521d\u59cb\u5316\u4ee3\u7801\n    /* Infinite loop */\n    /* USER CODE BEGIN WHILE */\n     while (1)\n     {\n         HAL_GPIO_TogglePin(LED0_GPIO_Port,LED0_Pin);\n         HAL_Delay(500);\n       /* USER CODE END WHILE */\n\n       /* USER CODE BEGIN 3 */\n     }\n    /* USER CODE END 3 */\n}\n</code></pre>"},{"location":"base_gpio/#gpio_3","title":"GPIO\u8f93\u5165","text":""},{"location":"base_index/","title":"\u57fa\u7840\u5916\u8bbe","text":"<p>\u666e\u901a\u5355\u7247\u673a\u6240\u5305\u542b\u7684\u5916\u8bbe\u53ca\u5185\u6838\u529f\u80fd\uff0c\u5982GPIO\u3001\u5916\u90e8\u4e2d\u65ad\u3001\u4e32\u53e3\u3001NVIC\u7b49</p> <p>\u5bf9\u4e0eSTM32F103\u7cfb\u5217\u6765\u8bf4\u5bf9\u5e94\u7684\u5916\u8bbe\u8d44\u6e90\u6709\u4ee5\u4e0b\u8d44\u6e90</p> <ol> <li>\u5b58\u50a8\u5668 <ul> <li>FLASH: 64K</li> <li>ARAM: 20k</li> </ul> </li> <li>\u901a\u7528\u8f93\u51fa\u8f93\u51fa\u63a5\u53e3(GPIO)<ul> <li>\u51e0\u4e4e\u5168\u90e8\u7684\u7aef\u53e3\u90fd\u53ef\u6620\u5c04\u5230\u5916\u90e8\u4e2d\u65ad\u7ebf</li> </ul> </li> <li>\u6570\u5b57\u6a21\u6570\u8f6c\u6362\u5668(ADC)</li> <li>\u76f4\u63a5\u5b58\u50a8\u5668\u5b58\u53d6(DMA)</li> <li>\u5b9a\u65f6\u5668(TIME)</li> <li>\u5b9e\u65f6\u65f6\u949f(RTC)</li> <li>\u770b\u95e8\u72d7(Watchdog)<ul> <li>\u7a97\u53e3\u770b\u95e8\u72d7</li> <li>\u72ec\u7acb\u770b\u95e8\u72d7</li> </ul> </li> <li> <p>\u7cfb\u7edf\u5b9a\u65f6\u5668(SysTick)</p> <p>\u2757\u6b64\u5b9a\u65f6\u5668\u4e3a\u5185\u6838\u8d44\u6e90\u5373\u6240\u6709\u4f7f\u7528Cortex-M3\u5185\u6838\u7684\u82af\u7247\u90fd\u6709</p> </li> <li> <p>IIC</p> </li> <li>\u901a\u7528\u540c\u6b65/\u5f02\u6b65\u6536\u53d1\u5668(USART)</li> <li>\u4e32\u884c\u5916\u8bbe\u63a5\u53e3(SPI)</li> <li>\u63a7\u5236\u5668\u533a\u57df\u7f51\u7edc(CAN)</li> <li>\u901a\u7528\u4e32\u884c\u603b\u7ebf(USB)</li> </ol> <p>\u6709\u5f88\u591a\u5916\u8bbe\u5427\uff0c\u4f46\u662f\u5176\u5b9e\u5728\u9879\u76ee\u4e2d\u5e76\u4e0d\u9700\u8981\u4f7f\u7528\u5168\u90e8\u7684\u5916\u8bbe\uff0c\u5927\u90e8\u5206\u5916\u8bbe\u90fd\u662f\u5177\u6709\u5171\u540c\u6027\u7684\uff0c\u6bd4\u5982\uff1a\u5bf9\u4e8e\u5b9a\u65f6\u5668\u6765\u8bf4\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u5b9a\u65f6\u5668\u7684\u786c\u4ef6\u5b9e\u73b0\u65b9\u5f0f\u90fd\u662f\u76f8\u540c\u7684\uff0c\u5373\u5b66\u4e86\u4e00\u79cd\u5b9a\u65f6\u5668\u5c31\u53ef\u4ee5\u8bf4\u5b66\u4e60\u4e86\u5168\u90e8\u7c7b\u578b\u7684\u5b9a\u65f6\u5668</p> <p>\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8ba9\u6211\u4eec\u5f00\u542f\u5355\u7247\u673a\u7684\u65c5\u7a0b\u4e00\u8d77\u611f\u53d7\u786c\u4ef6\u7684\u7f8e\u4e3d\uff01</p>"},{"location":"base_usb/","title":"USB\u5b66\u4e60","text":""},{"location":"base_usb/#stm32f1usbcdc","title":"\u6d4b\u8bd5STM32F1USB(CDC)","text":"<p>\u4f7f\u7528stm32cubx\u751f\u6210\u6d4b\u8bd5demo</p> <ul> <li>\u57fa\u7840\u8bbe\u7f6e\u8bf7\u53c2\u8003\u57fa\u7840\u914d\u7f6e</li> </ul> <p></p> <p></p> <p></p>"},{"location":"base_usb/#usb_1","title":"usb\u53d1\u9001\u6570\u636e\u5230\u4e0a\u4f4d\u673a","text":"<p>\u901a\u8fc7<code>usbd_cdc_if.c</code>\u4e2d\u7684<code>CDC_Transmit_FS</code></p> <pre><code>uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)\n{\n  uint8_t result = USBD_OK;\n  /* USER CODE BEGIN 7 */\n  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;\n  if (hcdc-&gt;TxState != 0){\n    return USBD_BUSY;\n  }\n  USBD_CDC_SetTxBuffer(&amp;hUsbDeviceFS, Buf, Len);\n  result = USBD_CDC_TransmitPacket(&amp;hUsbDeviceFS);\n  /* USER CODE END 7 */\n  return result;\n}\n</code></pre> <p>\u5728<code>main.c</code>\u4e2d\u7f16\u5199\u4ee3\u7801,\u53d1\u9001<code>Hello USB_CDC</code>\u5230\u4e0a\u4f4d\u673a</p> <pre><code>int main(void){\n    // \u7701\u7565cubx\u751f\u6210\u7684\u521d\u59cb\u5316\u4ee3\u7801\n    uint8_t buf[] = \"Hello USB_CDC\\r\\n\";\n    while(1){\n        CDC_Transmit_FS(buf,sizeof(buf));\n        HAL_Delay(1000);\n    }\n}\n</code></pre>"},{"location":"base_usb/#stm32cubx","title":"\u5b89\u88c5stm32cubx\u865a\u62df\u4e32\u53e3\u9a71\u52a8","text":"<p>https://www.st.com/zh/development-tools/stsw-stm32102.html</p> <p>\u6839\u636e\u81ea\u8eab\u7535\u8111\u7684\u67b6\u6784\u9009\u62e9\u5408\u9002\u7684\u9a71\u52a8,\u9a71\u52a8\u7248\u672c\u5efa\u8bae\u9009\u62e9W8</p> <p></p>"},{"location":"base_usb/#_1","title":"\u9a8c\u8bc1\u5f00\u53d1","text":"<p>\u6253\u5f00\u4e32\u53e3\u8c03\u8bd5\u52a9\u624b,\u9009\u62e9\u5bf9\u5e94\u7684\u4e32\u53e3\u53f7,\u6ce2\u7279\u7387\u968f\u610f\u9009\u62e9\u4e0d\u5f71\u54cd\u5b9e\u9a8c\u6548\u679c</p> <p></p>"},{"location":"base_usb/#usb_2","title":"\u521d\u6b65\u4e86\u89e3USB","text":""},{"location":"base_usb/#stm-usblib","title":"\u63a2\u7a76STM-USBLib","text":""},{"location":"base_usb/#usb_3","title":"USB\u521d\u59cb\u5316\u6d41\u7a0b","text":"<p>\u53c2\u8003\u94fe\u63a5 https://blog.csdn.net/jimaofu0494/article/details/109233087</p>"},{"location":"chore_translation_ld/","title":"GCC\u94fe\u63a5\u6587\u4ef6","text":"<p>\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528ARM GCC\uff08GNU Compiler Collection\uff09\u65f6\uff0c\u94fe\u63a5\u5668\u6587\u4ef6\uff08linker script\uff09\u5bf9\u4e8e\u914d\u7f6e\u7a0b\u5e8f\u7684\u5185\u5b58\u5e03\u5c40\u548c\u5206\u914d\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u94fe\u63a5\u5668\u6587\u4ef6\u544a\u8bc9\u94fe\u63a5\u5668\u5982\u4f55\u7ec4\u7ec7\u7a0b\u5e8f\u7684\u5404\u4e2a\u90e8\u5206\uff0c\u5305\u62ec\u4ee3\u7801\u3001\u6570\u636e\u3001\u5806\u6808\u7b49\uff0c\u4ee5\u53ca\u5b83\u4eec\u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"chore_translation_ld/#_1","title":"\u94fe\u63a5\u6587\u4ef6\u8be6\u89e3","text":"<p>\u5bf9\u4e8e\u94fe\u63a5\u6587\u4ef6\u5176\u5b9e\u4e3b\u8981\u4e00\u4e2a\u529f\u80fd\u5c31\u662f\u6307\u660e\u7a0b\u5e8f\u94fe\u63a5\u7684\u4f4d\u7f6e\u3002</p> <p>\u5bf9\u4e8e\u5d4c\u5165\u5f0f\u7684\u94fe\u63a5\u6587\u4ef6\u5f80\u5f80\u662f\u590d\u6742\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\uff0c\u5176\u5b9e\u5e76\u4e0d\u9700\u8981\u8fc7\u4e8e\u5173\u7cfb\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u666e\u901a\u7684\u5f00\u53d1\u8005\u6765\u8bf4\u53ea\u9700\u8981\u6839\u636e\u6a21\u677f\u94fe\u63a5\u6587\u4ef6\u8fdb\u884c\u90e8\u5206\u7b80\u5355\u7684\u66f4\u6539\uff0c\u6240\u4ee5\uff0c\u8fd9\u91cc\u53ea\u5bf9\u90e8\u5206\u7b80\u5355\u4e14\u91cd\u8981\u7684\u90e8\u5206\u8fdb\u884c\u89e3\u91ca\u8bf4\u660e\u3002</p>"},{"location":"chore_translation_ld/#_2","title":"\u91cd\u8981\u5b57\u6bb5","text":"<p><code>ENTRY(Reset_Handler)</code>: \u6307\u5b9a\u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\u4e3aReset_Handler\uff0c\u8be5\u51fd\u6570\u5728\u542f\u52a8\u6587\u4ef6\u4e2d\uff0c\u4f5c\u4e3a\u4e0a\u7535\u8fd0\u884c\u7684\u7b2c\u4e00\u4e2a\u51fd\u6570\u3002</p> <p><code>MEMORY</code>: \u5b9a\u4e49\u4e86\u7a0b\u5e8f\u6240\u7528\u5230\u7684\u5185\u5b58\u533a\u57df\uff0c\u5305\u62ecRAM\u548cFlash\u3002\u5728\u8fd9\u91cc\uff0cRAM\u8d77\u59cb\u5730\u5740\u4e3a0x20000000\uff0c\u957f\u5ea6\u4e3a20K\uff0cFlash\u8d77\u59cb\u5730\u5740\u4e3a0x8000000\uff0c\u957f\u5ea6\u4e3a128K\u3002</p> <p><code>SECTIONS</code>: \u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u4ee3\u7801\u548c\u6570\u636e\u6bb5\u4ee5\u53ca\u5b83\u4eec\u5728\u5185\u5b58\u4e2d\u7684\u653e\u7f6e\u3002\u5177\u4f53\u7684\u5185\u5bb9\u5305\u62ec\uff1a</p> <p><code>.isr_vector</code>: \u5411\u91cf\u8868\u7684\u5b58\u653e\u4f4d\u7f6e\uff0c\u901a\u5e38\u5728Flash\u4e2d\u3002</p> <p><code>.text</code>: \u5b58\u653e\u4ee3\u7801\u7684\u4f4d\u7f6e\uff0c\u5305\u62ec\u4ee3\u7801\u3001\u53ea\u8bfb\u6570\u636e\u4ee5\u53ca\u521d\u59cb\u5316\u4ee3\u7801\u6bb5\u3002</p> <p><code>.rodata</code>: \u5b58\u653e\u53ea\u8bfb\u6570\u636e\u7684\u4f4d\u7f6e\u3002</p> <p><code>.data</code>: \u5b58\u653e\u521d\u59cb\u5316\u6570\u636e\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u901a\u8fc7<code>AT&gt; FLASH</code>\u8868\u793a\u6570\u636e\u540c\u65f6\u5728<code>RAM</code>\u548c<code>Flash</code>\u4e2d\uff0c\u4f46\u5728\u8fd0\u884c\u65f6\u4f7f\u7528<code>RAM</code>\u4e2d\u7684\u6570\u636e\u3002</p> <p><code>.ARM.extab</code> \u548c <code>.ARM</code>: \u7528\u4e8e\u5f02\u5e38\u5904\u7406\u3002</p> <p><code>.bss</code>: \u5b58\u653e\u672a\u521d\u59cb\u5316\u6570\u636e\u7684\u4f4d\u7f6e\u3002</p> <p><code>._user_heap_stack</code>: \u7528\u4e8e\u68c0\u67e5RAM\u662f\u5426\u8db3\u591f\uff0c\u5305\u62ec\u5806\u548c\u6808\u7684\u5b9a\u4e49\u3002 <code>PROVIDE</code>\u8bed\u53e5\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e9b\u5168\u5c40\u7b26\u53f7\uff0c\u5982<code>end</code>\u548c<code>_end</code>\uff0c\u8fd9\u4e9b\u7b26\u53f7\u5728\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u4f7f\u7528\u3002</p> <p><code>.ARM.attributes</code>: \u5b58\u653eARM\u7279\u6709\u7684\u5c5e\u6027\u4fe1\u606f\u3002</p> <p><code>/DISCARD/</code>: \u4ece\u7f16\u8bd1\u5668\u5e93\u4e2d\u5220\u9664\u7279\u5b9a\u7684\u90e8\u5206\uff0c\u4ee5\u51cf\u5c0f\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f\u3002</p>"},{"location":"chore_translation_ld/#ramflash","title":"RAM\u548cFLASH\u5b9a\u4e49","text":"<pre><code>ENTRY(Reset_Handler)\n\n/* \u7528\u6237\u6a21\u5f0f\u5806\u6808\u7684\u6700\u9ad8\u5730\u5740 */\n_estack = ORIGIN(RAM) + LENGTH(RAM); /* end of \"RAM\" Ram type memory */\n\n_Min_Heap_Size = 0xC00; /* required amount of heap */\n_Min_Stack_Size = 0x400; /* required amount of stack */\n\n/* Memories definition */\nMEMORY\n{\n  RAM    (xrw)    : ORIGIN = 0x20000000,   LENGTH = 20K\n  FLASH    (rx)    : ORIGIN = 0x8000000,   LENGTH = 128K\n}\n</code></pre> <ul> <li><code>ENTRY(Reset_Handler)</code>: \u5b9a\u4e49\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u4e3a<code>Reset_Handler</code>\uff0c\u8fd9\u662f\u7a0b\u5e8f\u542f\u52a8\u65f6\u6267\u884c\u7684\u7b2c\u4e00\u4e2a\u51fd\u6570\u3002\u8fd9\u901a\u5e38\u5305\u542b\u4e86\u4e00\u4e9b\u786c\u4ef6\u521d\u59cb\u5316\u548c\u542f\u52a8\u4ee3\u7801\u3002</li> <li><code>_estack = ORIGIN(RAM) + LENGTH(RAM);</code>: \u5b9a\u4e49\u7528\u6237\u6a21\u5f0f\u5806\u6808\u7684\u6700\u9ad8\u5730\u5740\uff0c\u5373RAM\u7684\u7ed3\u675f\u5730\u5740\u3002\u8fd9\u4e2a\u5730\u5740\u901a\u5e38\u7528\u4f5c\u5806\u6808\u7684\u8d77\u59cb\u5730\u5740\u3002</li> <li><code>_Min_Heap_Size</code>\u548c<code>_Min_Stack_Size</code>: \u5b9a\u4e49\u4e86\u7a0b\u5e8f\u8fd0\u884c\u6240\u9700\u7684\u6700\u5c0f\u5806\u548c\u6808\u7684\u5927\u5c0f\u3002\u8fd9\u5bf9\u4e8e\u68c0\u67e5\u7cfb\u7edf\u662f\u5426\u6709\u8db3\u591f\u7684RAM\u53ef\u7528\u662f\u5f88\u6709\u7528\u7684\u3002</li> <li><code>MEMORY</code>\u90e8\u5206\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5185\u5b58\u533a\u57df\uff0c\u4e00\u4e2a\u662fRAM\uff0c\u4e00\u4e2a\u662fFLASH\u3002\u6bcf\u4e2a\u533a\u57df\u90fd\u6709\u4e00\u4e2a\u8d77\u59cb\u5730\u5740\uff08<code>ORIGIN</code>\uff09\u548c\u4e00\u4e2a\u957f\u5ea6\uff08<code>LENGTH</code>\uff09\u3002</li> </ul>"},{"location":"chore_translation_ld/#_3","title":"\u4e2d\u65ad\u5411\u91cf\u8868","text":"<pre><code>.isr_vector :\n{\n. = ALIGN(4);\nKEEP(*(.isr_vector)) /* Startup code */\n. = ALIGN(4);\n} &gt;FLASH\n</code></pre> <ul> <li><code>.isr_vector</code>: \u8fd9\u4e2a\u6bb5\u5b9a\u4e49\u4e86\u4e2d\u65ad\u5411\u91cf\u8868\uff0c\u5b83\u5305\u542b\u7a0b\u5e8f\u542f\u52a8\u65f6\u5c06\u6267\u884c\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u3002\u8fd9\u901a\u5e38\u5b58\u50a8\u5728Flash\u4e2d\u3002</li> </ul>"},{"location":"chore_translation_ld/#text","title":"text\u6bb5","text":"<pre><code>.text :\n{\n  . = ALIGN(4);\n  *(.text)           /* .text sections (code) */\n  *(.text*)          /* .text* sections (code) */\n  *(.glue_7)         /* glue arm to thumb code */\n  *(.glue_7t)        /* glue thumb to arm code */\n  *(.eh_frame)\n\n  KEEP (*(.init))\n  KEEP (*(.fini))\n\n  . = ALIGN(4);\n  _etext = .;        /* define a global symbols at end of code */\n} &gt;FLASH\n</code></pre> <ul> <li><code>.text</code>: \u8fd9\u4e2a\u6bb5\u5305\u542b\u4e86\u7a0b\u5e8f\u7684\u4ee3\u7801\u90e8\u5206\uff0c\u5305\u62ec\u6807\u51c6\u7684\u4ee3\u7801\u6bb5\uff08<code>.text</code>\uff09\u548c\u6c47\u7f16\u4ee3\u7801\u6bb5\uff08<code>*(.glue_7)</code> <code>*(.glue_7t)</code>\uff09\u3002</li> </ul> <pre><code>.rodata :\n{\n  . = ALIGN(4);\n  *(.rodata)         /* .rodata sections (constants, strings, etc.) */\n  *(.rodata*)        /* .rodata* sections (constants, strings, etc.) */\n  . = ALIGN(4);\n} &gt;FLASH\n</code></pre> <ul> <li><code>.rodata</code>: \u8fd9\u4e2a\u6bb5\u901a\u5e38\u5305\u542b\u53ea\u8bfb\u6570\u636e\uff0c\u5982\u5e38\u91cf\u548c\u5b57\u7b26\u4e32\u3002</li> </ul> <pre><code>.data :\n{   \n  . = ALIGN(4);\n  _sdata = .;        /* create a global symbol at data start */\n  *(.data)           /* .data sections */\n  *(.data*)          /* .data* sections */\n  *(.RamFunc)        /* .RamFunc sections */\n  *(.RamFunc*)       /* .RamFunc* sections */\n\n  . = ALIGN(4);\n  _edata = .;        /* define a global symbol at data end */\n} &gt;RAM AT&gt; FLASH\n</code></pre> <ul> <li><code>.data</code>: \u8fd9\u4e2a\u6bb5\u5305\u542b\u4e86\u521d\u59cb\u5316\u6570\u636e\uff0c\u5982\u5168\u5c40\u53d8\u91cf\u7684\u521d\u59cb\u503c\u3002<code>AT&gt; FLASH</code>\u8868\u793a\u6570\u636e\u540c\u65f6\u5b58\u5728\u4e8eRAM\u548cFlash\u4e2d\uff0c\u4f46\u5728\u8fd0\u884c\u65f6\u4f7f\u7528RAM\u4e2d\u7684\u6570\u636e\u3002</li> </ul> <pre><code>.bss :\n{\n  /* This is used by the startup in order to initialize the .bss section */\n  _sbss = .;         /* define a global symbol at bss start */\n  __bss_start__ = _sbss;\n  *(.bss)\n  *(.bss*)\n  *(COMMON)\n\n  . = ALIGN(4);\n  _ebss = .;         /* define a global symbol at bss end */\n  __bss_end__ = _ebss;\n} &gt;RAM\n</code></pre> <ul> <li><code>.bss</code>: \u8fd9\u4e2a\u6bb5\u5305\u542b\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u8fd9\u4e2a\u6bb5\u4f1a\u88ab\u6e05\u96f6\u3002</li> </ul> <pre><code>._user_heap_stack :\n{\n  . = ALIGN(8);\n  PROVIDE ( end = . );\n  PROVIDE ( _end = . );\n  . = . + _Min_Heap_Size;\n  . = . + _Min_Stack_Size;\n  . = ALIGN(8);\n} &gt;RAM\n</code></pre> <ul> <li><code>._user_heap_stack</code>: \u8fd9\u4e2a\u6bb5\u7528\u4e8e\u68c0\u67e5\u662f\u5426\u6709\u8db3\u591f\u7684RAM\u5269\u4f59\uff0c\u5305\u62ec\u5806\u548c\u6808\u7684\u5b9a\u4e49\u3002</li> </ul> <pre><code>/DISCARD/ :\n{\n  libc.a ( * )\n  libm.a ( * )\n  libgcc.a ( * )\n}\n</code></pre> <ul> <li><code>/DISCARD/</code>: \u8fd9\u4e2a\u90e8\u5206\u4ece\u7f16\u8bd1\u5668\u5e93\u4e2d\u5220\u9664\u4e00\u4e9b\u4fe1\u606f\uff0c\u4ee5\u51cf\u5c0f\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u4fe1\u606f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5e76\u4e0d\u9700\u8981\uff0c\u56e0\u4e3a\u5b83\u4eec\u5df2\u7ecf\u88ab\u5305\u542b\u5728\u4e86\u542f\u52a8\u6587\u4ef6\u4e2d\u3002</li> </ul> <pre><code>.ARM.attributes 0 : { *(.ARM.attributes) }\n</code></pre> <ul> <li><code>.ARM.attributes</code>: \u8fd9\u4e2a\u6bb5\u5305\u542b\u4e86ARM\u4f53\u7cfb\u7ed3\u6784\u7684\u4e00\u4e9b\u7279\u6b8a\u5c5e\u6027\u4fe1\u606f\u3002</li> </ul> <p>\u8fd9\u53ea\u662f\u5bf9\u4f60\u7684\u94fe\u63a5\u5668\u811a\u672c\u7684\u7b80\u8981\u89e3\u91ca\u3002\u786e\u4fdd\u6839\u636e\u4f60\u7684\u5177\u4f53\u9700\u6c42\u548c\u76ee\u6807\u5e73\u53f0\u8fdb\u884c\u8c03\u6574\u3002</p>"},{"location":"device_smg/","title":"\u6570\u7801\u7ba1\u5b9e\u65f6\u65f6\u949f\u663e\u793a","text":"RTC"},{"location":"device_smg/#rtc","title":"\u6dfb\u52a0RTC\u652f\u6301","text":""},{"location":"device_smg/#rtc_1","title":"\u521d\u59cb\u5316RTC\u5916\u8bbe","text":"<p>\u521b\u5efa<code>rtc.c</code> <code>rtc.h</code> \u6587\u4ef6</p>"},{"location":"device_smg/#api","title":"API\u51fd\u6570","text":"<p>RTC\u65f6\u949f\u521d\u59cb\u5316: <code>HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)</code></p> <p>RTC\u65f6\u949f\u65f6\u95f4\u8bbe\u7f6e: <code>HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)</code></p> <p>RTC\u65e5\u671f\u8bbe\u7f6e: <code>HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)</code></p> <pre><code>// RTC\u521d\u59cb\u5316\nvoid MX_RTC_Init(void) {\n    RTC_TimeTypeDef sTime = {0};\n    RTC_DateTypeDef DateToUpdate = {0};\n\n    hrtc.Instance = RTC;\n    hrtc.Init.AsynchPrediv = 32767;\n\n    HAL_RTC_Init(&amp;hrtc);\n\n    sTime.Hours = 0x0;\n    sTime.Minutes = 0x0;\n    sTime.Seconds = 0x0;\n\n    HAL_RTC_SetTime(&amp;hrtc, &amp;sTime, RTC_FORMAT_BCD);\n\n    // 2023 11 10 \u4e94\n    DateToUpdate.Year = 0x23;\n    DateToUpdate.Month = RTC_MONTH_NOVEMBER;\n    DateToUpdate.Date = 0x10;\n    DateToUpdate.WeekDay = RTC_WEEKDAY_FRIDAY;\n\n    HAL_RTC_SetDate(&amp;hrtc, &amp;DateToUpdate, RTC_FORMAT_BCD);\n}\n\n// RTC msp init\nvoid HAL_RTC_MspInit(RTC_HandleTypeDef *rtcHandle) {\n\n    if (rtcHandle-&gt;Instance == RTC) {\n    /* USER CODE BEGIN RTC_MspInit 0 */\n\n    /* USER CODE END RTC_MspInit 0 */\n    HAL_PWR_EnableBkUpAccess();\n    /* Enable BKP CLK enable for backup registers */\n    __HAL_RCC_BKP_CLK_ENABLE();\n    /* RTC clock enable */\n    __HAL_RCC_RTC_ENABLE();\n    /* USER CODE BEGIN RTC_MspInit 1 */\n\n    /* USER CODE END RTC_MspInit 1 */\n    }\n}\n</code></pre>"},{"location":"device_smg/#rtc-demo","title":"RTC demo","text":"<p><code>rtc.c</code> <pre><code>void MX_RTC_Init(void) {\n    RTC_TimeTypeDef sTime = {0};\n    RTC_DateTypeDef DateToUpdate = {0};\n\n    hrtc.Instance = RTC;\n    hrtc.Init.AsynchPrediv = 32767;\n\n    HAL_RTC_Init(&amp;hrtc);\n\n    // 00:00:00\n    sTime.Hours = 0x0;\n    sTime.Minutes = 0x0;\n    sTime.Seconds = 0x0;\n\n    HAL_RTC_SetTime(&amp;hrtc, &amp;sTime, RTC_FORMAT_BCD);\n\n    // 2023 11 10 \u4e94\n    DateToUpdate.Year = 0x23;\n    DateToUpdate.Month = RTC_MONTH_NOVEMBER;\n    DateToUpdate.Date = 0x10;\n    DateToUpdate.WeekDay = RTC_WEEKDAY_FRIDAY;\n\n    HAL_RTC_SetDate(&amp;hrtc, &amp;DateToUpdate, RTC_FORMAT_BCD);\n}\n\n// RTC msp init\nvoid HAL_RTC_MspInit(RTC_HandleTypeDef *rtcHandle) {\n\n    if (rtcHandle-&gt;Instance == RTC) {\n    /* USER CODE BEGIN RTC_MspInit 0 */\n\n    /* USER CODE END RTC_MspInit 0 */\n    HAL_PWR_EnableBkUpAccess();\n    /* Enable BKP CLK enable for backup registers */\n    __HAL_RCC_BKP_CLK_ENABLE();\n    /* RTC clock enable */\n    __HAL_RCC_RTC_ENABLE();\n    /* USER CODE BEGIN RTC_MspInit 1 */\n\n    /* USER CODE END RTC_MspInit 1 */\n    }\n}\n</code></pre></p> <p><code>main.c</code></p> <pre><code>#include &lt;stdio.h&gt;\n#include \"stm32f1xx_hal.h\"\n#include \"rtc.h\"\n\nuint8_t sShowTime[40];\nuint8_t sShowData[40];\n\nUART_HandleTypeDef huart1;\n\nvoid MX_USART1_UART_Init(void) {\n  huart1.Instance = USART1;\n  huart1.Init.BaudRate = 115200;\n  huart1.Init.WordLength = UART_WORDLENGTH_8B;\n  huart1.Init.StopBits = UART_STOPBITS_1;\n  huart1.Init.Parity = UART_PARITY_NONE;\n  huart1.Init.Mode = UART_MODE_TX_RX;\n  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;\n  huart1.Init.OverSampling = UART_OVERSAMPLING_16;\n  HAL_UART_Init(&amp;huart1);\n}\n\nvoid HAL_UART_MspInit(UART_HandleTypeDef* uartHandle) {\n\n  GPIO_InitTypeDef GPIO_InitStruct = {0};\n  if(uartHandle-&gt;Instance==USART1)\n  {\n    __HAL_RCC_USART1_CLK_ENABLE();\n\n    __HAL_RCC_GPIOA_CLK_ENABLE();\n\n    GPIO_InitStruct.Pin = GPIO_PIN_9;\n    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;\n    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;\n    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);\n\n    GPIO_InitStruct.Pin = GPIO_PIN_10;\n    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;\n    GPIO_InitStruct.Pull = GPIO_NOPULL;\n    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);\n\n  }\n}\n\n\n\nvoid main {\n    MX_USART1_UART_Init();\n    MX_RTC_Init();\n\n    while(1){\n        RTC_TimeShow(sShowTime);\n        RTC_DataShow(sShowData);\n        printf(\"data:%s time: %s\\r\\n\",sShowData,sShowTime);\n        HAL_Delay(1000);\n    }\n};\n\nint _write(int fd, char *ptr, int len) {\n    HAL_UART_Transmit(&amp;huart1, (uint8_t*)ptr, len, 0xFFFF);\n    return len;\n}\n</code></pre> <p>\u5b9e\u9a8c\u73b0\u8c61\uff1a</p>"},{"location":"migrationRTOS/","title":"\u79fb\u690dRTOS\u5230NANO","text":""},{"location":"migrationRTOS/#_1","title":"\u51c6\u5907\u4e00\u4e2a\u5b8c\u6574\u7684\u5de5\u7a0b\u53ef\u4ee5\u6b63\u5e38\u7f16\u8bd1\u4e0b\u8f7d\u7684\u5de5\u7a0b","text":"<p>\u5f85\u65bd\u5de5</p>"},{"location":"migrationRTOS/#_2","title":"\u7ebf\u7a0b\u7ba1\u7406","text":""},{"location":"migrationRTOS/#_3","title":"\u62a2\u5360\u5f0f\u591a\u4efb\u52a1\u7cfb\u7edf","text":"<p>\u591a\u4efb\u52a1\u7cfb\u7edf\u5c31\u662f\u5c06\u4ee5\u524d\u7684\u5927\u4efb\u52a1\u62c6\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u4efb\u52a1\u8fd0\u884c\uff0c\u5404\u4e2a\u4efb\u52a1\u901a\u8fc7\u4fe1\u53f7\u91cf\u7b49\u8fdb\u884c\u901a\u4fe1\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u4efb\u52a1\u6765\u8bf4\uff0c\u5b83\u6c38\u4e0d\u8fd4\u56de\u3002\u8fd9\u6837\u5b50\u5c31\u4fdd\u8bc1\u4e86\u6bcf\u4e00\u4e2a\u4efb\u52a1\u72ec\u7acb\uff0c\u5e76\u4e14\u5bf9\u4e8e\u591a\u4efb\u52a1\u7cfb\u7edf\u6765\u8bf4\u8fd8\u4f1a\u6709\u5173\u4e8e\u4f18\u5148\u7ea7\u7684\u63cf\u8ff0\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6574\u4e2a\u7cfb\u7edf\u6765\u8bf4\u5b9e\u65f6\u6027\u5f97\u5230\u66f4\u5927\u7684\u63d0\u9ad8\u3002</p> <p></p> <ol> <li>\u5b9e\u65f6\u6027</li> <li>\u4fbf\u5229\u6027</li> </ol>"},{"location":"rtos_queue/","title":"\u901a\u8fc7\u961f\u5217\u4f20\u9012\u6307\u9488","text":"<p>\u53d1\u9001\u6307\u9488\u65f6\u53d1\u9001\u6307\u9488</p> <pre><code>//\u4f20\u9012\u7ed3\u6784\u4f53\u7684\u6307\u9488\n/* \u521b\u5efa10\u4e2a\u5b58\u50a8\u6307\u9488\u53d8\u91cf\u7684\u6d88\u606f\u961f\u5217\uff0c\u7531\u4e8eCM3/CM4\u5185\u6838\u662f32\u4f4d\u673a\uff0c\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u5360\u75284\u4e2a\u5b57\u8282 */\nxQueue = xQueueCreate(10, sizeof(struct Msg *));    //\u5355\u5143\u5927\u5c0f\u4e3a\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u5927\u5c0f\n\n//\u53d1\u9001\u6d88\u606f\uff0c\u5b9e\u73b0\u7ed3\u6784\u4f53\u6307\u9488\u7684\u4f20\u9012 \nMSG_T *ptMsg;        //MSG_T\u4e3a\u7ed3\u6784\u4f53\u58f0\u660e\nptMsg = &amp;g_tMsg;   /* \u521d\u59cb\u5316\u7ed3\u6784\u4f53\u6307\u9488 */\n// \u521d\u59cb\u5316\u6570\u7ec4 \nptMsg-&gt;ucMessageID = 0;\nptMsg-&gt;ulData[0] = 0;\nptMsg-&gt;usData[0] = 0;\n//\u4f7f\u7528\u6d88\u606f\u961f\u5217\u5b9e\u73b0\u6307\u9488\u53d8\u91cf\u7684\u4f20\u9012 \nif (xQueueSend(xQueue2,                  /* \u6d88\u606f\u961f\u5217\u53e5\u67c4 */\n               (void *) &amp;ptMsg,           // \u53d1\u9001\u7ed3\u6784\u4f53\u6307\u9488\u53d8\u91cfptMsg\u7684\u5730\u5740  \u201c&amp;\u201d  \u53d6\u7ed3\u6784\u4f53\u6307\u9488\u7684\u5730\u5740\uff0c\u4f20\u9012\u6307\u9488\n               (TickType_t) 10) != pdPASS)\n\n//\u63a5\u6536\u6d88\u606f\uff0c\u63a5\u6536\u7ed3\u6784\u4f53\u7684\u6307\u9488\n    MSG_T *ptMsg; //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6307\u9488\nxResult = xQueueReceive(xQueue2,            /* \u6d88\u606f\u961f\u5217\u53e5\u67c4 */\n                        (void *) &amp;ptMsg,      // \u8fd9\u91cc\u83b7\u53d6\u7684\u662f\u7ed3\u6784\u4f53\u7684\u5730\u5740,\u7c7b\u4f3c\u4e8e char *a=\"stm\";char *b;b=a \u6307\u9488\u8d4b\u503c\uff0ca\u548cb\u6307\u5411\u540c\u4e00\u4e2a\u5730\u5740\n                        (TickType_t) xMaxBlockTime);/* \u8bbe\u7f6e\u963b\u585e\u65f6\u95f4 */\nif (xResult == pdPASS) {\n    /* \u6210\u529f\u63a5\u6536\uff0c\u5e76\u901a\u8fc7\u4e32\u53e3\u5c06\u6570\u636e\u6253\u5370\u51fa\u6765 */\n    printf(\"\u63a5\u6536\u5230\u6d88\u606f\u961f\u5217\u6570\u636eptMsg-&gt;ucMessageID = %d\\r\\n\", ptMsg-&gt;ucMessageID);\n    printf(\"\u63a5\u6536\u5230\u6d88\u606f\u961f\u5217\u6570\u636eptMsg-&gt;ulData[0] = %d\\r\\n\", ptMsg-&gt;ulData[0]);\n    printf(\"\u63a5\u6536\u5230\u6d88\u606f\u961f\u5217\u6570\u636eptMsg-&gt;usData[0] = %d\\r\\n\", ptMsg-&gt;usData[0]);\n} \n</code></pre>"}]}